
# accessKey: ""
# secretKey: ""
# # Number of drives attached to a node
# drivesPerNode: 1
# # Number of MinIO containers running
replicas: 4
# # Number of expanded MinIO clusters
# # zones: 1

ingress:
  enabled: true
#     # node-role.kubernetes.io/ingress: platform
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
#     kubernetes.io/ingress.class: nginx
#     # kubernetes.io/tls-acme: "true"
#     # kubernetes.io/ingress.allow-http: "false"
#     # kubernetes.io/ingress.global-static-ip-name: ""
#     # nginx.ingress.kubernetes.io/secure-backends: "true"
#     # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#     # nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
  path: /s3(/|$)(.*)
  hosts:
    - imjoy.duckdns.org
#   # tls: []
# ## Configure resource requests and limits
# ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
# ##
resources:
  requests:
    memory: 2Gi

# s3gateway:
#   enabled: false
#   replicas: 4
#   serviceEndpoint: ""
#   accessKey: ""
#   secretKey: ""

# ## Use minio as an azure blob gateway, you should disable data persistence so no volume claim are created.
# ## https://docs.minio.io/docs/minio-gateway-for-azure
# azuregateway:
#   enabled: false
#   # Number of parallel instances
#   replicas: 4

# ## Use minio as GCS (Google Cloud Storage) gateway, you should disable data persistence so no volume claim are created.
# ## https://docs.minio.io/docs/minio-gateway-for-gcs

# gcsgateway:
#   enabled: false
#   # Number of parallel instances
#   replicas: 4

# ## Use minio on NAS backend
# ## https://docs.minio.io/docs/minio-gateway-for-nas

# nasgateway:
#   enabled: false
#   # Number of parallel instances
#   replicas: 4
#   # For NAS Gateway, you may want to bind the PVC to a specific PV. To ensure that happens, PV to bind to should have
#   # a label like "pv: <value>", use value here.