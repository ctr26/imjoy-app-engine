name: "Create cluster using KinD"
on: [pull_request, push]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: ./controller/Dockerfile
          push: true
          tags: |
            ${{ github.repository }}:${{ github.sha }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
    
      - name: Check out the repo
        uses: actions/checkout@v2
      - uses: engineerd/setup-kind@v0.5.0
      - name: Testing K8S
        run: |
          kubectl cluster-info
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
      - name: setup helm
        run: |
          export GOBIN=$(go env GOPATH)/bin
          export PATH=$PATH:$GOBIN
          mkdir -p $GOBIN
          export HELM_PLATFORM=linux-amd64 && export HELM_VERSION=helm-v3.5.2
          wget https://get.helm.sh/$HELM_VERSION-$HELM_PLATFORM.tar.gz && tar -xvzf $HELM_VERSION-$HELM_PLATFORM.tar.gz && rm -rf $HELM_VERSION-$HELM_PLATFORM.tar.gz && mv $HELM_PLATFORM/helm $GOBIN/helm3 && chmod +x $GOBIN/helm3
          helm3 init && helm3 repo update
          helm install --set engineImage=${{ github.repository }}:${{ github.sha }} imjoy-app-engine ./helm-chart/